# -*- coding: utf-8 -*-
"""Hotel checked in.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nPme2dwTRhpWHgcETTn_sWxbg4Pxruqm

Import dependencies
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

df = pd.read_csv("/content/train_data_evaluation_part_2.csv")

df.head()

df.drop('ID',axis='columns',inplace=True)

df.drop('Unnamed: 0',axis='columns',inplace=True)

df.drop('Nationality',axis='columns',inplace=True)

df.dtypes

df.describe()

import seaborn as sns
sns.heatmap(df.isnull())

df['Age'].fillna(int(df['Age'].mean()), inplace=True)

sns.heatmap(df.isnull())

for column in df:
  print(df[column].unique())

for column in df:
            if df[column].dtypes=='object':
                print(f'{column}: {df[column].unique()}')

df = pd.get_dummies(data=df, columns=['DistributionChannel','MarketSegment'])

df.columns

df['BookingsCheckedIn'].unique()

cols_to_scale = ['Age','LodgingRevenue','OtherRevenue','DaysSinceCreation','AverageLeadTime','BookingsCanceled','BookingsNoShowed','BookingsCheckedIn','PersonsNights','RoomNights','DaysSinceLastStay','DaysSinceFirstStay']

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
df[cols_to_scale] = scaler.fit_transform(df[cols_to_scale])

for col in df:
    print(f'{col}: {df[col].unique()}')

df.dtypes

X = df.drop('SRQuietRoom',axis='columns')
y = df['SRQuietRoom']

len(X.columns)

import tensorflow as tf
from tensorflow import keras


model = keras.models.Sequential([
    keras.layers.Dense(35, input_shape=(35,), activation='relu'),
    keras.layers.Dense(20, activation='relu'),
    keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])

model.fit(X,y, epochs=50)

model.evaluate(X, y)

yp = model.predict(X)
yp[:1]

y_pred = []
for element in yp:
    if element > 0.5:
        y_pred.append(1)
    else:
        y_pred.append(0)

print(y_pred)

from sklearn.metrics import confusion_matrix , classification_report

print(classification_report(y,y_pred))

import seaborn as sn
cm = tf.math.confusion_matrix(labels=y,predictions=y_pred)

plt.figure(figsize = (10,7))
sn.heatmap(cm, annot=True, fmt='d')
plt.xlabel('Predicted')
plt.ylabel('Truth')

X.head(3)

import tensorflow as tf
path = './model.sav'
model.save(path )
loaded_model= tf.keras.models.load_model(path )

import pickle
filename = 'Hotel_model.sav'
pickle.dump(model, open(filename, 'wb'))
loaded_model = pickle.load(open('Hotel_model.sav', 'rb'))